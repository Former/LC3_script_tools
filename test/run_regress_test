#!/bin/bash
sim_file=$1
byte_code_file=$2
input_file=$3
correct_file=$4
default_out_file=$5
out_config=$6


in_file=$byte_code_file.in
out_file=$byte_code_file.out  
out_correct_file=$byte_code_file.correct.out
script_file=$byte_code_file.script
byte_code_file_correct=${byte_code_file%.*}_correct.obj

# replace finish code to zero(nop) for stop programm after command "continue"
sed 's/\x41\xC0\x0F\xFF/\x41\xC0\x00\x00/g' $byte_code_file > $byte_code_file_correct

echo "file $byte_code_file_correct" > $script_file
echo "continue" >> $script_file
echo "quit" >> $script_file

cp $input_file $in_file
touch $in_file
touch $out_file

# run test prog
if [[ $out_config == "stdout" ]]
then
    # make correct out file
    cat $correct_file > $out_correct_file

    cat $in_file | $sim_file $byte_code_file_correct > $out_file
else
    # make correct out file
    cat $default_out_file > $out_correct_file
    cat $correct_file >> $out_correct_file

    $sim_file -fileio $in_file $out_file -s $script_file 
fi


RETVAL=$?
[ $RETVAL -ne 0 ]  && echo $byte_code_file FAILED && exit $RETVAL

diff -qbwB $out_file $out_correct_file
RETVAL=$?
[ $RETVAL -eq 0 ] && echo $byte_code_file PASSED
[ $RETVAL -ne 0 ] && echo $byte_code_file FAILED
exit $RETVAL
